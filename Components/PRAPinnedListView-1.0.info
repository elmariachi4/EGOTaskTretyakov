{"Name":"PRAPinnedListView","Id":1623,"Alias":"PRAPinnedListView","Description":"# PRA Pinned Header #\r\nPRAPinnedListView  enables you to use Sticky Headers feature with header click, use this list view to make your app look awesome. You don\u0027t need to write lot\u0027s of code to use this just few simple steps and you can add it to your app. this contains a generic adapter also that means you also don\u0027t need to make a separate list adapter to bind list, just pass your item collection and your list will be bind prestty well. **:)**\r\n\r\n# Features #\r\n- Sticky Headers\r\n- Inbuilt Adapter\r\n- Header Click\r\n\r\n\r\n## PRAListView ##\r\n\r\nReady to use!! Follow me \u003e\r\n\r\n- Add PRAPinnedListView reference to app.\r\n- Add PRAListView to your Xaml file (e.g. Main.xaml)\r\n\r\n\t     \u003cprapinnedlistview.PRAListView\r\n\t\t    android:id=\"@+id/list\"\r\n\t\t    android:layout_width=\"match_parent\"\r\n\t\t    android:layout_height=\"match_parent\" /\u003e\r\n\r\n- Access in your activity (e.g. MainActivity.cs).\r\n\t\t\t\r\n\t\t\t#region Pinned List View\r\n\r\n            PRAService.Register\u003cIListItemView\u003cItemHolder\u003e\u003e(this);\r\n            listView = FindViewById\u003cPRAListView\u003e(Resource.Id.list);\r\n            listView.SetItemSource\u003cItemHolder\u003e(DataHandler.GetData());\r\n            \r\n            #endregion\r\n\r\nYou have done your most time taken part here :) Now we just need to pass **Item Header View** and **Item View** these view will be customized as per your need :) Yeppeeeee!! we have done\r\n\r\n","Version":"1.0","Summary":"Use PRAPinnedListView to make your app listing beautiful by usinh sticky headers for listview.","QuickStart":"\r\n## PRAListView ##\r\n\r\nReady to use!! Follow me \u003e\r\n\r\n- Add PRAPinnedListView reference to app.\r\n- Add PRAListView to your Xaml file (e.g. Main.xaml)\r\n\r\n\t     \u003cprapinnedlistview.PRAListView\r\n\t\t    android:id=\"@+id/list\"\r\n\t\t    android:layout_width=\"match_parent\"\r\n\t\t    android:layout_height=\"match_parent\" /\u003e\r\n\r\n- Access in your activity (e.g. MainActivity.cs).\r\n\t\t\t\r\n\t\t\t#region Pinned List View\r\n\r\n            PRAService.Register\u003cIListItemView\u003cItemHolder\u003e\u003e(this);\r\n            listView = FindViewById\u003cPRAListView\u003e(Resource.Id.list);\r\n            listView.SetItemSource\u003cItemHolder\u003e(DataHandler.GetData());\r\n            listView.PRAItemClick += listView_PRAItemClick;\r\n            #endregion\r\n\r\n\u003e PRAListItem Click Cvent\r\n\t\t\r\n\t\tvoid listView_PRAItemClick(object sender, PRAListItemClickEventArg\u003cobject\u003e e)\r\n        {\r\n            Toast.MakeText(this, string.Format(\"Hey! you clicked {0}\", ((ItemHolder)e.Item).Title), ToastLength.Short).Show();\r\n        }\r\n\r\n- Implement **IListItemView** interface with your modal into your activity where you accessing PRAListView.\r\n\r\n\r\n    \tpublic class MainActivity : Activity, IListItemView\u003cItemHolder\u003e\r\n\r\n- Initialized both views method **GetItemHeaderView()** and **GetItemView()**.\r\n\r\n\t\t#region Get Header Item View\r\n\r\n        public View GetItemHeaderView(int position, View convertView, ViewGroup parent, ItemHolder headerItem)\r\n        {\r\n            View view = convertView;\r\n            view = view ?? LayoutInflater.Inflate(Resource.Layout.HeaderView, parent, false); //Header view\r\n            view.FindViewById\u003cTextView\u003e(Resource.Id.txtTitle).Text = headerItem.Title;\r\n            return view;\r\n        }\r\n\r\n        #endregion\r\n \t\t\r\n\t\t#region Get Item View\r\n\r\n        public View GetItemView(int position, View convertView, ViewGroup parent, ItemHolder item)\r\n        {\r\n            View view = convertView;\r\n            view = view ?? LayoutInflater.Inflate(Resource.Layout.ItemView, parent, false); //Item view\r\n            view.FindViewById\u003cTextView\u003e(Resource.Id.txtItemTitle).Text = item.Title;\r\n            return view;\r\n        }\r\n\r\n        #endregion\r\n\r\n\u003e **Cool :)** your activity should be like this.\r\n\r\n\tpublic class MainActivity : Activity, IListItemView\u003cItemHolder\u003e\r\n    {\r\n        #region Private Declaration\r\n\r\n        private PRAListView listView;\r\n\r\n        #endregion\r\n\r\n        #region On Create Method\r\n\r\n        protected override void OnCreate(Bundle bundle)\r\n        {\r\n            base.OnCreate(bundle);\r\n            SetContentView(Resource.Layout.Main);\r\n\r\n            #region Pinned List View\r\n\r\n            PRAService.Register\u003cIListItemView\u003cItemHolder\u003e\u003e(this);\r\n            listView = FindViewById\u003cPRAListView\u003e(Resource.Id.list);\r\n            listView.SetItemSource\u003cItemHolder\u003e(DataHandler.GetData());\r\n            listView.PRAItemClick += listView_PRAItemClick;\r\n\r\n            #endregion\r\n        }\r\n\r\n        void listView_PRAItemClick(object sender, PRAListItemClickEventArg\u003cobject\u003e e)\r\n        {\r\n            Toast.MakeText(this, string.Format(\"Hey! you clicked {0}\", ((ItemHolder)e.Item).Title), ToastLength.Short).Show();\r\n        }\r\n\r\n        #endregion\r\n\r\n        #region Get Header Item View\r\n\r\n        public View GetItemHeaderView(int position, View convertView, ViewGroup parent, ItemHolder headerItem)\r\n        {\r\n            View view = convertView;\r\n            view = view ?? LayoutInflater.Inflate(Resource.Layout.HeaderView, parent, false); //Header view\r\n            view.FindViewById\u003cTextView\u003e(Resource.Id.txtTitle).Text = headerItem.Title;\r\n            return view;\r\n        }\r\n\r\n        #endregion\r\n\r\n        #region Get Item View\r\n\r\n        public View GetItemView(int position, View convertView, ViewGroup parent, ItemHolder item)\r\n        {\r\n            View view = convertView;\r\n            view = view ?? LayoutInflater.Inflate(Resource.Layout.ItemView, parent, false); //Item view\r\n            view.FindViewById\u003cTextView\u003e(Resource.Id.txtItemTitle).Text = item.Title;\r\n            return view;\r\n        }\r\n\r\n        #endregion\r\n    }\r\n\r\nYou have done your most time taken part here :) Now we just need to pass **Item Header View** and **Item View** these view will be customized as per your need :) Yeppeeeee!! we have done \r\n\r\n**More Component**\r\n\r\n\u003e [PRADataBinder](https://components.xamarin.com/view/pradatabinder?version=1.1 \"PRA Data Binder\")\r\n\u003e \r\n\u003e PRAMotionZoom \r\n\r\n","Hash":"ad35ae9025b138baa374ab8e5a0d1a4f","TargetPlatforms":["android"],"TrialHash":null}